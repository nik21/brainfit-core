#!/usr/bin/env php
<?php

error_reporting(E_ALL ^ E_NOTICE);

function includeIfExists($file)
{
    if(file_exists($file))
    {
        return include $file;
    }
}

$aProcessUser = posix_getpwuid(posix_geteuid());
if ($aProcessUser['name'] == 'root')
    die('Do not start the service as root');

if($loader = includeIfExists(__DIR__.'/../vendor/autoload.php'))
    define('ROOT', dirname(__FILE__).'/../');
else if($loader = includeIfExists(__DIR__.'/../../../autoload.php'))
    define('ROOT', dirname(__FILE__).'/../../../../');
else
    die('Not found autoload.php...'.PHP_EOL);

include_once(ROOT.'engine/Default.php');

//actions
$sAction = trim($argv[1]);
$sPidFilename = ROOT.'/logs/daemon.pid';

$iPid = file_exists($sPidFilename) ? (int)file_get_contents($sPidFilename) : 0;

$sCurrentFile = __FILE__;//'./bin/daemon';

switch($sAction)
{
    case 'start':
        if($iPid)
            die ('Already running'.PHP_EOL);

        shell_exec($sCurrentFile.' -m 1 > /dev/null 2>&1 &');

        exit;
        break;
    case 'stop':
        if(!$iPid)
            die ('Not running'.PHP_EOL);

        shell_exec('kill -15 '.$iPid);
        sleep(4);
        $aProcess = explode(PHP_EOL,
            shell_exec("ps -ef | grep ".escapeshellarg($sCurrentFile." -m {$iPid}")
                ." | grep -v grep | awk '{print $2}'"));
        foreach($aProcess as $iProcessId)
            if($iProcessId = (int)$iProcessId)
                shell_exec('kill -9 '.$iProcessId);

        sleep(2);

        shell_exec('kill -9 '.$iPid);

        @unlink($sPidFilename);
        exit;
        break;
}

$aOptions = getopt('h:p:c:d:m:');

if(!$aOptions['m'])
    die ('Invalid command'.PHP_EOL);

if($aOptions['m'] == 1)
{
    //master
    file_put_contents(ROOT.'/logs/daemon.pid', getmypid());
    $sCurrentFile .= ' -m '.getmypid();
}

//If the input was not a parameter-c (child), this daemon runs. If you specify "-c", then wait for data to STDIN
//Additionally, the daemon mode available options -h and-p to specify the host and port

$obError = null;

try
{
    $obTaskManager = new \Brainfit\Util\TaskManager();
    $obTaskManager->run($sCurrentFile, $aOptions);
} catch(\Brainfit\Model\Exception $e)
{
    $obError = $e;
} catch(\Exception $e)
{
    $obError = $e;
}

if(!is_null($obError))
{
    echo "Error: ".$obError->getMessage()."(".$obError->getCode().')'.PHP_EOL;
}
